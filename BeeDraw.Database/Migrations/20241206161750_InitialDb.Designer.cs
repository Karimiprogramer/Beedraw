// <auto-generated />
using System;
using BeeDraw.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeeDraw.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241206161750_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeeDraw.Database.Models.Lottery.LotteryPrizeTbl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("LotteryId")
                        .HasColumnType("int");

                    b.Property<long?>("LotteryId1")
                        .HasColumnType("bigint");

                    b.Property<int>("NumberOfPrizes")
                        .HasColumnType("int");

                    b.Property<decimal>("PrizeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PrizeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LotteryId1");

                    b.ToTable("LotteryPrizeTbl");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.Lottery.LotteryTbl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LotteryTbl");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.Lottery.LotteryTicketTbl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DatePurchased")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsWinner")
                        .HasColumnType("bit");

                    b.Property<int>("LotteryId")
                        .HasColumnType("int");

                    b.Property<long?>("LotteryId1")
                        .HasColumnType("bigint");

                    b.Property<int>("TicketCount")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<long?>("UserId1")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LotteryId1");

                    b.HasIndex("UserId1");

                    b.ToTable("LotteryTicketTbl");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.User.FriendshipTbl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ReceiverId")
                        .HasColumnType("bigint");

                    b.Property<long>("SenderId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("FriendshipTbl");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.User.TaskCompletionTbl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRewardClaimed")
                        .HasColumnType("bit");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<long?>("TaskId1")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<long?>("UserId1")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TaskId1");

                    b.HasIndex("UserId1");

                    b.ToTable("CompletionTbl");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.User.TaskTbl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RewardAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TaskTbl");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.User.UserTbl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBot")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("RefererId")
                        .HasColumnType("bigint");

                    b.Property<long>("TelegramUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WalletAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("UserTbl");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.Wallet.CurrencyTbl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CurrencyTbl");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.Wallet.WalletBalanceTbl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<long?>("CurrencyId1")
                        .HasColumnType("bigint");

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.Property<long?>("WalletId1")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId1");

                    b.HasIndex("WalletId1");

                    b.ToTable("WalletBalanceTbl");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.Wallet.WalletTbl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<long?>("UserId1")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId1");

                    b.ToTable("WalletTbl");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.Lottery.LotteryPrizeTbl", b =>
                {
                    b.HasOne("BeeDraw.Database.Models.Lottery.LotteryTbl", "Lottery")
                        .WithMany("Prizes")
                        .HasForeignKey("LotteryId1");

                    b.Navigation("Lottery");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.Lottery.LotteryTicketTbl", b =>
                {
                    b.HasOne("BeeDraw.Database.Models.Lottery.LotteryTbl", "Lottery")
                        .WithMany("Tickets")
                        .HasForeignKey("LotteryId1");

                    b.HasOne("BeeDraw.Database.Models.User.UserTbl", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");

                    b.Navigation("Lottery");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.User.FriendshipTbl", b =>
                {
                    b.HasOne("BeeDraw.Database.Models.User.UserTbl", "Receiver")
                        .WithMany("ReceivedFriendRequests")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeeDraw.Database.Models.User.UserTbl", "Sender")
                        .WithMany("SentFriendRequests")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.User.TaskCompletionTbl", b =>
                {
                    b.HasOne("BeeDraw.Database.Models.User.TaskTbl", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId1");

                    b.HasOne("BeeDraw.Database.Models.User.UserTbl", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.Wallet.WalletBalanceTbl", b =>
                {
                    b.HasOne("BeeDraw.Database.Models.Wallet.CurrencyTbl", "Currency")
                        .WithMany("WalletBalances")
                        .HasForeignKey("CurrencyId1");

                    b.HasOne("BeeDraw.Database.Models.Wallet.WalletTbl", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletId1");

                    b.Navigation("Currency");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.Wallet.WalletTbl", b =>
                {
                    b.HasOne("BeeDraw.Database.Models.User.UserTbl", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.Lottery.LotteryTbl", b =>
                {
                    b.Navigation("Prizes");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.User.UserTbl", b =>
                {
                    b.Navigation("ReceivedFriendRequests");

                    b.Navigation("SentFriendRequests");
                });

            modelBuilder.Entity("BeeDraw.Database.Models.Wallet.CurrencyTbl", b =>
                {
                    b.Navigation("WalletBalances");
                });
#pragma warning restore 612, 618
        }
    }
}
